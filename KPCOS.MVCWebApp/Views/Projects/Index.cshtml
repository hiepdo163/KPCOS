@model IEnumerable<KPCOS.Data.Models.Project>

@{
    ViewData["Title"] = "Project Index";
}

<h1>Project Index</h1>

<div class="row">
    <div class="col-md-10">
        <h3 class="display-8">Project List</h3>
    </div>
    <div class="col-md-2 text-end">
        <button type="button" id="addProjectButton" class="btn btn-primary" onclick="addProject();">
            Add Project
        </button>     
        
    </div>
    <p>
        <a class="btn btn-primary" asp-action="Create">Create New</a>
    </p>
</div>

<div class="row">
    <div class="col-md-12">
        <table class="table table-striped table-bordered table-hover">
            <thead>
                <tr class="card-header">
                    <th class="card-title text-center">ID</th>
                    <th class="card-title text-center">Actual Cost</th>
                    <th class="card-title text-center">End Date</th>
                    <th class="card-title text-center">Estimated Cost</th>
                    <th class="card-title text-center">Start Date</th>
                    <th class="card-title text-center">Status</th>
                    <th class="card-title text-center">Construction Staff</th>
                    <th class="card-title text-center">Customer</th>
                    <th class="card-title text-center">Designer</th>
                    @* <th class="card-title text-center"></th> *@
                </tr>
            </thead>
            <tbody class="tblProject">
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Id)
                        </td>                        <td>
                            @Html.DisplayFor(modelItem => item.ActualCost)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.EndDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.EstimatedCost)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.StartDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Status)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ConstructionStaff.User.Fullname)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Customer.User.Fullname)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Designer.User.Fullname)
                        </td>
                        <td>
                            <a class="btn btn-sm btn-info" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                            <a class="btn btn-sm btn-secondary" asp-action="Details" asp-route-id="@item.Id">Details</a>
                            <a class="btn btn-sm btn-danger" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<div class="modal" id="projectModal" tabindex="-1" aria-labelledby="projectModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            @using (Html.BeginForm(null, null, FormMethod.Post, new { name = "frmProject", id = "frmProject" }))
            {
                @Html.AntiForgeryToken()
                <div class="modal-header">
                    <h5 class="modal-title" id="projectModalLabel">Project</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="form-group row">
                        <div class="col-md-4">
                            <label for="ActualCost">Actual Cost</label>
                            <input type="text" id="ActualCost" name="ActualCost" class="form-control" />
                        </div>
                        <div class="col-md-4">
                            <label for="EstimatedCost">Estimated Cost</label>
                            <input type="text" id="EstimatedCost" name="EstimatedCost" class="form-control" />
                        </div>
                        <div class="col-md-4">
                            <label for="StartDate">Start Date</label>
                            <input type="datetime-local" id="StartDate" name="StartDate" class="form-control" />
                        </div>
                        <div class="col-md-4">
                            <label for="EndDate">End Date</label>
                            <input type="datetime-local" id="EndDate" name="EndDate" class="form-control" />
                        </div>
                        <div class="col-md-4">
                            <label for="Status">Status</label>
                            <select id="Status" name="Status" class="form-control">
                                <option value="Planed">Planed</option>
                                <option value="Working">Working</option>
                                <option value="Done">Done</option>
                            </select>
                        </div>           
                        <div class="col-md-4">
                            <label for="ConstructionStaffId">Construction Staff</label>
                            <select id="ConstructionStaffId" name="ConstructionStaffId" class="form-control">
                                <option value="">Select Construction Staff</option>
                            </select>
                        </div>
                        <div class="col-md-4">
                            <label for="CustomerId">Customer</label>
                            <select id="CustomerId" name="CustomerId" class="form-control">
                                <option value="">Select Customer</option>
                            </select>
                        </div>
                        <div class="col-md-4">
                            <label for="DesignerId">Designer</label>
                            <select id="DesignerId" name="DesignerId" class="form-control">
                                <option value="">Select Designer</option>
                            </select>
                        </div>

                    </div>
                </div>
                <div class="modal-footer">
                    <button id="btSaveProject" type="button" class="btn btn-primary">Save</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            }
        </div>
    </div>
</div>

@* @section scripts {
    <script type="text/javascript">


        $(document).ready(function () {
            loadProjectData();
            loadCustomerData();
            loadEmployeeData();
            $("#btSaveProject").click(function (event) {
                event.preventDefault();

                let isEditMode = $('#projectModalLabel').text() === "Edit Project";

                let projectData = {
                    actualCost: $('#ActualCost').val(),
                    estimatedCost: $('#EstimatedCost').val(),
                    startDate: $('#StartDate').val(),
                    endDate: $('#EndDate').val(),
                    status: $('#Status').val(),
                    constructionStaffId: $('#ConstructionStaffId').val(),
                    customerId: $('#CustomerId').val(),
                    designerId: $('#DesignerId').val()
                };

                if (isEditMode) {
                    $.ajax({
                        url: 'https://localhost:7163/api/Project', 
                        type: "PUT",
                        headers: {
                            'accept': 'text/plain',
                            'Content-Type': 'application/json'
                        },
                        data: JSON.stringify(projectData),
                        success: function (result) {
                            if (result.status >= 1) {
                                $('#projectModal').modal('hide');
                                loadProjectData();
                            }
                            alert(result.message);
                        },
                        error: function (xhr, error) {
                            alert(xhr.statusText);
                        }
                    });
                } else {
                    $.ajax({
                        url: 'https://localhost:7163/api/Project',
                        type: "POST",
                        headers: {
                            'accept': 'text/plain',
                            'Content-Type': 'application/json'
                        },
                        data: JSON.stringify(projectData),
                        success: function (result) {
                            if (result.status >= 1) {
                                $('#projectModal').modal('hide');
                                loadProjectData();
                            }
                            alert(result.message);
                        },
                        error: function (xhr, error) {
                            alert(xhr.statusText);
                        }
                    });
                }
            });

        });

        function loadProjectData() {
            $.ajax({
                url: 'https://localhost:7163/api/Project',
                type: "GET",
                contentType: 'application/json; charset=utf-8',
                dataType: "json",
                success: function (result) {
                    var html = '';
                    $.each(result.data, function (key, item) {
                        html += '<tr>';
                        html += '<td>' + item.actualCost + '</td>';
                        html += '<td>' + item.endDate + '</td>';
                        html += '<td>' + item.estimatedCost + '</td>';
                        html += '<td>' + item.startDate + '</td>';
                        html += '<td>' + item.status + '</td>';
                        html += '<td>' + item.constructionStaffId + '</td>';
                        html += '<td>' + item.customerId + '</td>';
                        html += '<td>' + item.designerId + '</td>';
                        html += '<td>' +
                            '<button class="btn btn-success" onclick="editProject(`' + item.id + '`)">Update</button>' +
                            '<button class="btn btn-danger" onclick="deletePẹoect(`' + item.id + '`)">Delete</button>' +
                            '</td>';;
                        html += '</tr>';
                    });
                    $('.tblProject').html(html);
                },
                error: function (xhr, error) {
                    alert(xhr.statusText);
                }
            });
        }
        function loadEmployeeData() {
            $.ajax({
                url: 'https://localhost:7163/api/Employee',
                type: "GET",
                contentType: 'application/json; charset=utf-8',
                dataType: "json",
                success: function (result) {
                    if (result.status === 1) {
                        populateDropdown('#ConstructionStaffId', result.data);
                        populateDropdown('#DesignerId', result.data);

                    }
                },
                error: function (xhr, error) {
                    alert(xhr.statusText);
                }
            });
        }  
        function loadCustomerData() {
            $.ajax({
                url: 'https://localhost:7163/api/Customer',
                type: "GET",
                contentType: 'application/json; charset=utf-8',
                dataType: "json",
                success: function (result) {
                    if (result.status === 1) {
                        populateDropdown('#CustomerId', result.data);
                    }
                },
                error: function (xhr, error) {
                    alert(xhr.statusText);
                }
            });
        } 

        function populateDropdown(selector, data) {
            $(selector).empty(); 
            $(selector).append('<option value="">Select</option>');

            $.each(data, function (index, item) {
                $(selector).append('<option value="' + item.id + '">' + item.id + '</option>');
            });
        };
        function addProject() {
            $("#projectModalLabel").html("Add New Project");
            $('#projectModal').modal('show');
            $('#ActualCost').val('');
            $('#EstimatedCost').val('');
            $('#StartDate').val('');
            $('#EndDate').val('');
            $('#Status').val('');
            $('#ConstructionStaffId').val('');
            $('#CustomerId').val('');
            $('#DesignerId').val('');
        };
        function editProject(id) {
            $.ajax({
                url: 'https://localhost:7163/api/Project/' + id,
                type: "GET",
                contentType: 'application/json; charset=utf-8',
                dataType: "json",
                success: function (result) {
                    if (result.status === 1) {
                        $('#ActualCost').val(result.data.actualCost);
                        $('#EstimatedCost').val(result.data.estimatedCost);
                        $('#StartDate').val(result.data.startDate);
                        $('#EndDate').val(result.data.endDate);
                        $('#Status').val(result.data.status);
                        $('#ConstructionStaffId').val(result.data.constructionStaffId);
                        $('#CustomerId').val(result.data.customerId);
                        $('#DesignerId').val(result.data.designerId);
                        $("#projectModalLabel").html("Edit Project");
                        $('#projectModal').modal('show');
                    } else {
                        alert(result.message);
                    }
                },
                error: function (xhr, error) {
                    alert(xhr.statusText);
                }
            });
        }
        function deleteProject(id) {
            if (confirm('Are you sure you want to delete this project?')) {
                $.ajax({
                    url: 'https://localhost:7163/api/Project/' + id,
                    type: "DELETE",
                    contentType: 'application/json; charset=utf-8',
                    success: function (result) {
                        if (result.status === 1) {
                            loadProjectData(); // Tải lại dữ liệu dự án
                            alert(result.message);
                        } else {
                            alert(result.message);
                        }
                    },
                    error: function (xhr, error) {
                        alert(xhr.statusText);
                    }
                });
            }
        }



        $('#addProjectButton').on('click', function () {
            addProject();
        });


    </script>
} *@

