@model IEnumerable<KPCOS.Data.Models.Project>

@{
    ViewData["Title"] = "Project Index";
}

<h1>Project Index</h1>


<div class="row">
    <div class="col-md-10">
        <h3 class="display-8">Project List</h3>
    </div>
    <div class="col-md-2 text-end">
        <button type="button" id="addProjectButton" class="btn btn-primary" onclick="addProject();">
            Add Project
        </button>

    </div>
    <div class="row mb-3">
        <div class="col-md-2">
            <input type="text" id="customerName" class="form-control" placeholder="Search by customer name" onkeyup="searchProject()" />
        </div>
        <div class="col-md-3">
            <select id="DesignerId" class="form-control" onchange="searchProject()">
                <option value="">Select Designer</option>
            </select>
        </div>


        <div class="col-md-2">
            <select id="status" class="form-control" onchange="searchProject()">
                <option value="">Select Status</option>
                <option value="Planed">Planed</option>
                <option value="Working">Working</option>
                <option value="Done">Done</option>
            </select>
        </div>
        <div class="col-md-2">
            <button type="button" class="btn btn-primary" onclick="resetFilters()">Reset</button>
        </div>
    </div>
    <div class="row mb-3">
        <div class="col-md-2">
            <label for="startDate">Start Date</label>
            <input type="date" id="startDate" class="form-control" onchange="searchProject()" />
        </div>
        <div class="col-md-2">
            <label for="endDate">End Date</label>
            <input type="date" id="endDate" class="form-control" onchange="searchProject()" />
        </div>
    </div>

    <p>
        <a class="btn btn-primary" asp-action="Create">Create New</a>
    </p>
</div>

<div class="row">
    <div class="col-md-12">
        <table class="table table-striped table-bordered table-hover">
            <thead>
                <tr class="card-header">
                    <th class="card-title text-center">ID</th>
                    <th class="card-title text-center">Estimated Cost</th>

                    <th class="card-title text-center">Actual Cost</th>
                    <th class="card-title text-center">Start Date</th>

                    <th class="card-title text-center">End Date</th>
                    <th class="card-title text-center">Status</th>
                    <th class="card-title text-center">Construction Staff</th>
                    <th class="card-title text-center">Customer</th>
                    <th class="card-title text-center">Designer</th>
                    <th class="card-title text-center">Function</th> 
                </tr>
            </thead>
            <tbody class="tblProject">
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Id)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.EstimatedCost)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ActualCost)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.StartDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.EndDate)
                        </td>


                        <td>
                            @Html.DisplayFor(modelItem => item.Status)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ConstructionStaff.User.Fullname)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Customer.User.Fullname)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Designer.User.Fullname)
                        </td>
                        <td>
                            <a class="btn btn-sm btn-info" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                            <a class="btn btn-sm btn-secondary" asp-action="Details" asp-route-id="@item.Id">Details</a>
                            <a class="btn btn-sm btn-danger" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<div class="modal" id="projectModal" tabindex="-1" aria-labelledby="projectModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            @using (Html.BeginForm(null, null, FormMethod.Post, new { name = "frmProject", id = "frmProject" }))
            {
                @Html.AntiForgeryToken()
                <div class="modal-header">
                    <h5 class="modal-title" id="projectModalLabel">Project</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="form-group row">
                        <div class="col-md-4">
                            <label for="ActualCost">Actual Cost</label>
                            <input type="text" id="ActualCost" name="ActualCost" class="form-control" />
                            <span id="ActualCost-error" class="text-danger"></span>
                        </div>
                        <div class="col-md-4">
                            <label for="EstimatedCost">Estimated Cost</label>
                            <input type="text" id="EstimatedCost" name="EstimatedCost" class="form-control" />
                            <span id="ActualCost-error" class="text-danger"></span>
                        </div>
                        <div class="col-md-4">
                            <label for="StartDate">Start Date</label>
                            <input type="datetime-local" id="StartDate" name="StartDate" class="form-control" />
                            <span id="ActualCost-error" class="text-danger"></span>
                        </div>
                        <div class="col-md-4">
                            <label for="EndDate">End Date</label>
                            <input type="datetime-local" id="EndDate" name="EndDate" class="form-control" />
                            <span id="ActualCost-error" class="text-danger"></span>
                        </div>
                        <div class="col-md-4">
                            <label for="Status">Status</label>
                            <select id="Status" name="Status" class="form-control">
                                <option value="Planed">Planed</option>
                                <option value="Working">Working</option>
                                <option value="Done">Done</option>
                            </select>
                        </div>
                        <div class="col-md-4">
                            <label for="ConstructionStaffId">Construction Staff</label>
                            <select id="ConstructionStaffId" name="ConstructionStaffId" class="form-control">
                                <option value="">Select Construction Staff</option>
                            </select>
                        </div>
                        <div class="col-md-4">
                            <label for="DesignerId">Designer</label>
                            <select id="DesignerId" name="DesignerId" class="form-control">
                                <option value="">Select Designer</option>
                            </select>
                        </div>
                        <div class="col-md-4">
                            <label for="CustomerId">Customer</label>
                            <select id="CustomerId" name="CustomerId" class="form-control">
                                <option value="">Select Customer</option>
                            </select>
                        </div>


                    </div>
                </div>
                <div class="modal-footer">
                    <button id="btSaveProject" type="button" class="btn btn-primary">Save</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            }
        </div>
    </div>
</div>

@section scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            loadCustomerData();
            loadEmployeeData();
            // loadProjectData();
            searchProject();


            $("#btSaveProject").click(function (event) {
                event.preventDefault();
                let isEditMode = $('#projectModalLabel').text() === "Edit Project";

                let projectData = {
                    actualCost: $('#ActualCost').val(),
                    estimatedCost: $('#EstimatedCost').val(),
                    startDate: $('#StartDate').val(),
                    endDate: $('#EndDate').val(),
                    status: $('#Status').val(),
                    constructionStaffId: $('#ConstructionStaffId').val(),
                    customerId: $('#CustomerId').val(),
                    designerId: $('#DesignerId').val()
                };

                if (isEditMode) {
                    $.ajax({
                        url: 'https://localhost:7163/api/Project',
                        type: "PUT",
                        headers: {
                            'accept': 'text/plain',
                            'Content-Type': 'application/json'
                        },
                        data: JSON.stringify(projectData),
                        success: function (result) {
                            if (result.status >= 1) {
                                $('#projectModal').modal('hide');
                                searchProject();
                            }
                            alert(result.message);
                        },
                        error: function (xhr, error) {
                            alert(xhr.statusText);
                        }
                    });
                } else {
                    $.ajax({
                        url: 'https://localhost:7163/api/Project',
                        type: "POST",
                        headers: {
                            'accept': 'text/plain',
                            'Content-Type': 'application/json'
                        },
                        data: JSON.stringify(projectData),
                        success: function (result) {
                            if (result.status >= 1) {
                                $('#projectModal').modal('hide');
                                searchProject();
                            }
                            alert(result.message);
                        },
                        error: function (xhr, error) {
                            alert(xhr.statusText);
                        }
                    });
                }
            });
        });

        // function loadProjectData() {
        //     $.ajax({
        //         url: 'https://localhost:7163/api/Project',
        //         type: "GET",
        //         success: function (result) {
        //             let tableBody = $('.tblProject');
        //             tableBody.empty();
        //             $.each(result.data, function (index, item) {
        //                 let row = `<tr>
        //                                             <td>${item.id}</td>
        //                                             <td>${item.actualCost}</td>
        //                                             <td>${item.endDate}</td>
        //                                             <td>${item.estimatedCost}</td>
        //                                             <td>${item.startDate}</td>
        //                                             <td>${item.status}</td>
        //                                             <td>${item.constructionStaff.user.fullname}</td>
        //                                             <td>${item.customer.user.fullname}</td>
        //                                             <td>${item.designer.user.fullname}</td>
        //                                             <td>
        //                                                 <a class="btn btn-sm btn-info" onclick="editProject(${item.id})">Edit</a>
        //                                                 <a class="btn btn-sm btn-danger" onclick="deleteProject(${item.id})">Delete</a>
        //                                             </td>
        //                                         </tr>`;
        //                 tableBody.append(row);
        //             });
        //         }
        //     });
        // }

        function loadCustomerData() {
            $.ajax({
                url: 'https://localhost:7163/api/Customer',
                type: "GET",
                success: function (result) {
                    let customerSelect = $('#CustomerId');
                    customerSelect.empty();
                    $.each(result.data, function (index, item) {
                        customerSelect.append(`<option value="${item.id}">${item.user.fullname}</option>`);
                    });
                }
            });
        }


        function loadEmployeeData() {
            $.ajax({
                url: 'https://localhost:7163/api/Employee',
                type: "GET",
                success: function (result) {
                    console.log(result);
                    let employeeSelect = $('#ConstructionStaffId');
                    let designerSelect = $('#DesignerId');
                    employeeSelect.empty();
                    designerSelect.empty();
                    $.each(result.data, function (index, item) {
                        designerSelect.append(`<option value="${item.id}">${item.user.fullname}</option>`);
                        employeeSelect.append(`<option value="${item.id}">${item.user.fullname}</option>`);
                    });

                }


            });
        }

        function addProject() {
            $('#projectModalLabel').text("Add Project");
            $('#frmProject')[0].reset();
            $('#projectModal').modal('show');
        }

        $(document).on('click', '.btn-info', function () {
            let id = $(this).closest('tr').find('td:first').text();
            editProject(id);
        });

        $(document).on('click', '.btn-danger', function () {
            let id = $(this).closest('tr').find('td:first').text(); 
            deleteProject(id);
        });

        function editProject(id) {
            alert("Loading project: " + id + " data ...");

            $('#projectModalLabel').text("Edit Project");
            $.ajax({
                url: `https://localhost:7163/api/Project/${id}`,
                type: "GET",
                success: function (response) {
                    const item = response.data;
                    console.log(item);
                    $('#ActualCost').val(item.actualCost);
                    $('#EstimatedCost').val(item.estimatedCost);
                    $('#StartDate').val(item.startDate);
                    $('#EndDate').val(item.endDate);
                    $('#Status').val(item.status);
                    $('#ConstructionStaffId').val(item.constructionStaffId);
                    $('#CustomerId').val(item.customerId);
                    $('#DesignerId').val(item.designerId);
                    $('#projectModal').modal('show');
                }
            });
        }

        function deleteProject(id) {
            if (confirm("Are you sure you want to delete this project?")) {
                $.ajax({
                    url: `https://localhost:7163/api/Project/${id}`,
                    type: "DELETE",
                    success: function (result) {
                        console.log(item);
                        alert(result.message);
                        searchProject()
                    },
                    error: function (xhr, error) {
                        alert(xhr.statusText);
                    }
                });
            }
        }
        function resetFilters() {
            $('#customerName').val('');
            $('#DesignerId').val('');
            $('#createdDate').val('');
            $('#status').val('');
            searchProject();
        }


        function searchProject() {
            let customerName = $('#customerName').val();
            let designerId = $('#designerName').val();
            let startDate = $('#startDate').val();
            let status = $('#status').val();
            alert("Loading project data ...");

            $.ajax({
                url: 'https://localhost:7163/api/Project/search',
                type: "GET",
                data: {
                    customerName: customerName,
                    designerId: designerId,
                    startDate: startDate ? new Date(startDate).toISOString() : null,
                    status: status
                },
                success: function (result) {
                    console.log(result);
                    let tableBody = $('.tblProject');
                    tableBody.empty();
                    $.each(result.data, function (index, item) {
                        let row = `<tr>
                                                            <td>${item.id}</td>
                                                            <td>${item.estimatedCost}</td>

                                                            <td>${item.actualCost}</td>
                                                            <td>${item.startDate}</td>
                                                            <td>${item.endDate}</td>
                                                            <td>${item.status}</td>
                                                            <td>${item.constructionStaff.user.fullname}</td>
                                                            <td>${item.customer.user.fullname}</td>
                                                            <td>${item.designer.user.fullname}</td>
                                                            <td>
                                                                <a class="btn btn-sm btn-info" onclick="editProject(${item.id})">Edit</a>
                                                                <a class="btn btn-sm btn-danger" onclick="deleteProject(${item.id})">Delete</a>
                                                            </td>
                                                        </tr>`;
                        tableBody.append(row);                                                                                                                                                                                                          
                    });
                }
            });
        }

    </script>
}
