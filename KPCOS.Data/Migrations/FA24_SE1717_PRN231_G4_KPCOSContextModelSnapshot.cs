// <auto-generated />
using System;
using KPCOS.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KPCOS.Data.Migrations
{
    [DbContext(typeof(FA24_SE1717_PRN231_G4_KPCOSContext))]
    partial class FA24_SE1717_PRN231_G4_KPCOSContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KPCOS.Data.Models.Consultation", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("id");

                    b.Property<string>("AdjustedDesign")
                        .HasColumnType("text")
                        .HasColumnName("adjusted_design");

                    b.Property<string>("AdjustedSpecification")
                        .HasColumnType("text")
                        .HasColumnName("adjusted_specification");

                    b.Property<string>("DesignId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("design_id");

                    b.Property<string>("Note")
                        .HasColumnType("text")
                        .HasColumnName("note");

                    b.HasKey("Id")
                        .HasName("PK__Consulta__3213E83F1A2FF1D7");

                    b.HasIndex("DesignId");

                    b.ToTable("Consultation", (string)null);
                });

            modelBuilder.Entity("KPCOS.Data.Models.Customer", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("id");

                    b.Property<int?>("LoyaltyPoint")
                        .HasColumnType("int")
                        .HasColumnName("loyalty_point");

                    b.Property<string>("MembershipStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("membership_status");

                    b.Property<string>("PackageId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("package_id");

                    b.Property<string>("UserId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PK__Customer__3213E83FAA299BC7");

                    b.HasIndex("PackageId");

                    b.HasIndex("UserId");

                    b.ToTable("Customer", (string)null);
                });

            modelBuilder.Entity("KPCOS.Data.Models.Design", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("id");

                    b.Property<decimal?>("Budget")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("budget");

                    b.Property<string>("ConsultantBy")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("consultant_by");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("create_date");

                    b.Property<string>("CustomerId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("customer_id");

                    b.Property<decimal?>("Depth")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 0)")
                        .HasDefaultValue(0.6m)
                        .HasColumnName("depth");

                    b.Property<string>("DesignType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("design_type");

                    b.Property<string>("FiltrationSystem")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("filtration_system");

                    b.Property<string>("KoiCountRange")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("koi_count_range");

                    b.Property<string>("KoiType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("koi_type");

                    b.Property<string>("Location")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Outdoor")
                        .HasColumnName("location");

                    b.Property<decimal?>("MinLength")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 0)")
                        .HasDefaultValue(2m)
                        .HasColumnName("min_length");

                    b.Property<decimal?>("MinWidth")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 0)")
                        .HasDefaultValue(0.8m)
                        .HasColumnName("min_width");

                    b.Property<string>("Note")
                        .HasColumnType("text")
                        .HasColumnName("note");

                    b.Property<string>("Shape")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Rectangular")
                        .HasColumnName("shape");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Not yet responded")
                        .HasColumnName("status");

                    b.Property<string>("TemplateId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("template_id");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("update_date");

                    b.Property<decimal?>("WaterLevel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 0)")
                        .HasDefaultValue(0.4m)
                        .HasColumnName("water_level");

                    b.Property<string>("WaterQuality")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("water_quality");

                    b.HasKey("Id")
                        .HasName("PK__Design__3213E83FE5726A41");

                    b.HasIndex("CustomerId");

                    b.HasIndex("TemplateId");

                    b.ToTable("Design", (string)null);
                });

            modelBuilder.Entity("KPCOS.Data.Models.DesignConcept", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("description");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("image");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.Property<string>("ProjectId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("project_id");

                    b.HasKey("Id")
                        .HasName("PK__DesignCo__3213E83F11AE8A1B");

                    b.HasIndex("ProjectId");

                    b.ToTable("DesignConcept", (string)null);
                });

            modelBuilder.Entity("KPCOS.Data.Models.DesignTemplate", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("id");

                    b.Property<string>("DefaultLocation")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("default_location");

                    b.Property<string>("DefaultShape")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("default_shape");

                    b.Property<string>("DefaultSize")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("default_size");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("image");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("total_price");

                    b.HasKey("Id")
                        .HasName("PK__DesignTe__3213E83F18852BEA");

                    b.ToTable("DesignTemplate", (string)null);
                });

            modelBuilder.Entity("KPCOS.Data.Models.Employee", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("id");

                    b.Property<decimal?>("Salary")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 0)")
                        .HasDefaultValue(1000m)
                        .HasColumnName("salary");

                    b.Property<string>("SupervisorId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("supervisor_id");

                    b.Property<string>("UserId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PK__Employee__3213E83FEE68B788");

                    b.HasIndex("SupervisorId");

                    b.HasIndex("UserId");

                    b.ToTable("Employee", (string)null);
                });

            modelBuilder.Entity("KPCOS.Data.Models.Feedback", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("id");

                    b.Property<string>("Content")
                        .HasColumnType("text")
                        .HasColumnName("content");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("create_date");

                    b.Property<string>("CustomerId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("customer_id");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<string>("ProjectId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("project_id");

                    b.Property<decimal?>("Rating")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("rating");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("update_date");

                    b.HasKey("Id")
                        .HasName("PK__Feedback__3213E83F96D3765A");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Feedback", (string)null);
                });

            modelBuilder.Entity("KPCOS.Data.Models.Invoice", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("id");

                    b.Property<decimal?>("DiscountApplied")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("discount_applied");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime")
                        .HasColumnName("payment_date");

                    b.Property<string>("PaymentMethod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("payment_method");

                    b.Property<string>("ProjectId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("project_id");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("status");

                    b.Property<decimal?>("TaxAmount")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("tax_amount");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("total_amount");

                    b.HasKey("Id")
                        .HasName("PK__Invoice__3213E83F22A1D60A");

                    b.HasIndex("ProjectId");

                    b.ToTable("Invoice", (string)null);
                });

            modelBuilder.Entity("KPCOS.Data.Models.Material", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.Property<string>("ProjectId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("project_id");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("type");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("unit");

                    b.HasKey("Id")
                        .HasName("PK__Material__3213E83F856B7201");

                    b.HasIndex("ProjectId");

                    b.ToTable("Material", (string)null);
                });

            modelBuilder.Entity("KPCOS.Data.Models.Package", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("create_date");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("description");

                    b.Property<int?>("DiscountPercentage")
                        .HasColumnType("int")
                        .HasColumnName("discount_percentage");

                    b.Property<string>("Duration")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("duration");

                    b.Property<string>("FeatureInclude")
                        .HasColumnType("text")
                        .HasColumnName("feature_include");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("price");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime")
                        .HasColumnName("update_at");

                    b.HasKey("Id")
                        .HasName("PK__Package__3213E83F7A66ECD3");

                    b.ToTable("Package", (string)null);
                });

            modelBuilder.Entity("KPCOS.Data.Models.PaymentPolicy", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("create_date");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.Property<int?>("PaymentDeadlineDay")
                        .HasColumnType("int")
                        .HasColumnName("payment_deadline_day");

                    b.Property<string>("PaymentMethodAvailable")
                        .HasColumnType("text")
                        .HasColumnName("payment_method_available");

                    b.Property<string>("RefundPolicy")
                        .HasColumnType("text")
                        .HasColumnName("refund_policy");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("update_date");

                    b.HasKey("Id")
                        .HasName("PK__PaymentP__3213E83FB2EE6900");

                    b.ToTable("PaymentPolicy", (string)null);
                });

            modelBuilder.Entity("KPCOS.Data.Models.Project", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("id");

                    b.Property<decimal?>("ActualCost")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("actual_cost");

                    b.Property<string>("ConstructionStaffId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("construction_staff_id");

                    b.Property<string>("CustomerId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("customer_id");

                    b.Property<string>("DesignerId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("designer_id");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime")
                        .HasColumnName("end_date");

                    b.Property<decimal?>("EstimatedCost")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("estimated_cost");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime")
                        .HasColumnName("start_date");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("PK__Project__3213E83F66C9E3A2");

                    b.HasIndex("ConstructionStaffId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DesignerId");

                    b.ToTable("Project", (string)null);
                });

            modelBuilder.Entity("KPCOS.Data.Models.Quotation", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("id");

                    b.Property<string>("ComplexityLevel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("complexity_level");

                    b.Property<decimal?>("ConsultationAmount")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("consultation_amount");

                    b.Property<string>("DesignId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("design_id");

                    b.Property<string>("Note")
                        .HasColumnType("text")
                        .HasColumnName("note");

                    b.Property<decimal?>("QuotationAmount")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("quotation_amount");

                    b.Property<DateTime?>("QuotationDate")
                        .HasColumnType("datetime")
                        .HasColumnName("quotation_date");

                    b.Property<string>("Scale")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("scale");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status");

                    b.Property<string>("Style")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("style");

                    b.HasKey("Id")
                        .HasName("PK__Quotatio__3213E83FF9F2486B");

                    b.HasIndex("DesignId");

                    b.ToTable("Quotation", (string)null);
                });

            modelBuilder.Entity("KPCOS.Data.Models.ServiceAssignment", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("id");

                    b.Property<DateTime?>("AssignDate")
                        .HasColumnType("datetime")
                        .HasColumnName("assign_date");

                    b.Property<string>("EmployeeId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("employee_id");

                    b.Property<string>("ServiceBookingId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("service_booking_id");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Assigned")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("PK__ServiceA__3213E83FEBA0D20E");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ServiceBookingId");

                    b.ToTable("ServiceAssignment", (string)null);
                });

            modelBuilder.Entity("KPCOS.Data.Models.ServiceBooking", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("id");

                    b.Property<DateTime?>("BookingDate")
                        .HasColumnType("datetime")
                        .HasColumnName("booking_date");

                    b.Property<string>("CustomerId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("customer_id");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime")
                        .HasColumnName("end_date");

                    b.Property<string>("Note")
                        .HasColumnType("text")
                        .HasColumnName("note");

                    b.Property<string>("ScheduleType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("schedule_type");

                    b.Property<string>("ServiceType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("service_type");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime")
                        .HasColumnName("start_date");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Pending")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("PK__ServiceB__3213E83FDB2F72FC");

                    b.HasIndex("CustomerId");

                    b.ToTable("ServiceBooking", (string)null);
                });

            modelBuilder.Entity("KPCOS.Data.Models.ServiceExecution", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("id");

                    b.Property<string>("EmployeeId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("employee_id");

                    b.Property<DateTime?>("ExecutionDate")
                        .HasColumnType("datetime")
                        .HasColumnName("execution_date");

                    b.Property<string>("Result")
                        .HasColumnType("text")
                        .HasColumnName("result");

                    b.Property<string>("ServiceBookingId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("service_booking_id");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Completed")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("PK__ServiceE__3213E83FD27E75A1");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ServiceBookingId");

                    b.ToTable("ServiceExecution", (string)null);
                });

            modelBuilder.Entity("KPCOS.Data.Models.ServiceFeedback", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("create_date");

                    b.Property<string>("CustomerId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("customer_id");

                    b.Property<string>("Feedback")
                        .HasColumnType("text")
                        .HasColumnName("feedback");

                    b.Property<decimal?>("Rating")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("rating");

                    b.Property<string>("ServiceBookingId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("service_booking_id");

                    b.HasKey("Id")
                        .HasName("PK__ServiceF__3213E83FE23E258A");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ServiceBookingId");

                    b.ToTable("ServiceFeedback", (string)null);
                });

            modelBuilder.Entity("KPCOS.Data.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("address");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("create_date");

                    b.Property<string>("Fullname")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("fullname");

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("password");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("phone");

                    b.Property<string>("Role")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("role");

                    b.Property<bool?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("status");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("update_date");

                    b.Property<string>("Username")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("PK__User__3213E83F3193F61C");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("KPCOS.Data.Models.Consultation", b =>
                {
                    b.HasOne("KPCOS.Data.Models.Design", "Design")
                        .WithMany("Consultations")
                        .HasForeignKey("DesignId")
                        .HasConstraintName("FK_Consultation_Design");

                    b.Navigation("Design");
                });

            modelBuilder.Entity("KPCOS.Data.Models.Customer", b =>
                {
                    b.HasOne("KPCOS.Data.Models.Package", "Package")
                        .WithMany("Customers")
                        .HasForeignKey("PackageId")
                        .HasConstraintName("FK_Customer_Package");

                    b.HasOne("KPCOS.Data.Models.User", "User")
                        .WithMany("Customers")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Customer_User");

                    b.Navigation("Package");

                    b.Navigation("User");
                });

            modelBuilder.Entity("KPCOS.Data.Models.Design", b =>
                {
                    b.HasOne("KPCOS.Data.Models.Customer", "Customer")
                        .WithMany("Designs")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_Design_Customer");

                    b.HasOne("KPCOS.Data.Models.DesignTemplate", "Template")
                        .WithMany("Designs")
                        .HasForeignKey("TemplateId")
                        .HasConstraintName("FK_Design_Template");

                    b.Navigation("Customer");

                    b.Navigation("Template");
                });

            modelBuilder.Entity("KPCOS.Data.Models.DesignConcept", b =>
                {
                    b.HasOne("KPCOS.Data.Models.Project", "Project")
                        .WithMany("DesignConcepts")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_DesignConcept_Project");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("KPCOS.Data.Models.Employee", b =>
                {
                    b.HasOne("KPCOS.Data.Models.Employee", "Supervisor")
                        .WithMany("InverseSupervisor")
                        .HasForeignKey("SupervisorId")
                        .HasConstraintName("FK_Employee_Supervisor");

                    b.HasOne("KPCOS.Data.Models.User", "User")
                        .WithMany("Employees")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Employee_User");

                    b.Navigation("Supervisor");

                    b.Navigation("User");
                });

            modelBuilder.Entity("KPCOS.Data.Models.Feedback", b =>
                {
                    b.HasOne("KPCOS.Data.Models.Customer", "Customer")
                        .WithMany("Feedbacks")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_Feedback_Customer");

                    b.HasOne("KPCOS.Data.Models.Project", "Project")
                        .WithMany("Feedbacks")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_Feedback_Project");

                    b.Navigation("Customer");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("KPCOS.Data.Models.Invoice", b =>
                {
                    b.HasOne("KPCOS.Data.Models.Project", "Project")
                        .WithMany("Invoices")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_Invoice_Project");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("KPCOS.Data.Models.Material", b =>
                {
                    b.HasOne("KPCOS.Data.Models.Project", "Project")
                        .WithMany("Materials")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_Material_Project");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("KPCOS.Data.Models.Project", b =>
                {
                    b.HasOne("KPCOS.Data.Models.Employee", "ConstructionStaff")
                        .WithMany("ProjectConstructionStaffs")
                        .HasForeignKey("ConstructionStaffId")
                        .HasConstraintName("FK_Project_ConstructionStaff");

                    b.HasOne("KPCOS.Data.Models.Customer", "Customer")
                        .WithMany("Projects")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_Project_Customer");

                    b.HasOne("KPCOS.Data.Models.Employee", "Designer")
                        .WithMany("ProjectDesigners")
                        .HasForeignKey("DesignerId")
                        .HasConstraintName("FK_Project_Designer");

                    b.Navigation("ConstructionStaff");

                    b.Navigation("Customer");

                    b.Navigation("Designer");
                });

            modelBuilder.Entity("KPCOS.Data.Models.Quotation", b =>
                {
                    b.HasOne("KPCOS.Data.Models.Design", "Design")
                        .WithMany("Quotations")
                        .HasForeignKey("DesignId")
                        .HasConstraintName("FK_Quotation_Design");

                    b.Navigation("Design");
                });

            modelBuilder.Entity("KPCOS.Data.Models.ServiceAssignment", b =>
                {
                    b.HasOne("KPCOS.Data.Models.Employee", "Employee")
                        .WithMany("ServiceAssignments")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_ServiceAssignment_Employee");

                    b.HasOne("KPCOS.Data.Models.ServiceBooking", "ServiceBooking")
                        .WithMany("ServiceAssignments")
                        .HasForeignKey("ServiceBookingId")
                        .HasConstraintName("FK_ServiceAssignment_ServiceBooking");

                    b.Navigation("Employee");

                    b.Navigation("ServiceBooking");
                });

            modelBuilder.Entity("KPCOS.Data.Models.ServiceBooking", b =>
                {
                    b.HasOne("KPCOS.Data.Models.Customer", "Customer")
                        .WithMany("ServiceBookings")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_ServiceBooking_Customer");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("KPCOS.Data.Models.ServiceExecution", b =>
                {
                    b.HasOne("KPCOS.Data.Models.Employee", "Employee")
                        .WithMany("ServiceExecutions")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_ServiceExecution_Employee");

                    b.HasOne("KPCOS.Data.Models.ServiceBooking", "ServiceBooking")
                        .WithMany("ServiceExecutions")
                        .HasForeignKey("ServiceBookingId")
                        .HasConstraintName("FK_ServiceExecution_ServiceBooking");

                    b.Navigation("Employee");

                    b.Navigation("ServiceBooking");
                });

            modelBuilder.Entity("KPCOS.Data.Models.ServiceFeedback", b =>
                {
                    b.HasOne("KPCOS.Data.Models.Customer", "Customer")
                        .WithMany("ServiceFeedbacks")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_ServiceFeedback_Customer");

                    b.HasOne("KPCOS.Data.Models.ServiceBooking", "ServiceBooking")
                        .WithMany("ServiceFeedbacks")
                        .HasForeignKey("ServiceBookingId")
                        .HasConstraintName("FK_ServiceFeedback_ServiceBooking");

                    b.Navigation("Customer");

                    b.Navigation("ServiceBooking");
                });

            modelBuilder.Entity("KPCOS.Data.Models.Customer", b =>
                {
                    b.Navigation("Designs");

                    b.Navigation("Feedbacks");

                    b.Navigation("Projects");

                    b.Navigation("ServiceBookings");

                    b.Navigation("ServiceFeedbacks");
                });

            modelBuilder.Entity("KPCOS.Data.Models.Design", b =>
                {
                    b.Navigation("Consultations");

                    b.Navigation("Quotations");
                });

            modelBuilder.Entity("KPCOS.Data.Models.DesignTemplate", b =>
                {
                    b.Navigation("Designs");
                });

            modelBuilder.Entity("KPCOS.Data.Models.Employee", b =>
                {
                    b.Navigation("InverseSupervisor");

                    b.Navigation("ProjectConstructionStaffs");

                    b.Navigation("ProjectDesigners");

                    b.Navigation("ServiceAssignments");

                    b.Navigation("ServiceExecutions");
                });

            modelBuilder.Entity("KPCOS.Data.Models.Package", b =>
                {
                    b.Navigation("Customers");
                });

            modelBuilder.Entity("KPCOS.Data.Models.Project", b =>
                {
                    b.Navigation("DesignConcepts");

                    b.Navigation("Feedbacks");

                    b.Navigation("Invoices");

                    b.Navigation("Materials");
                });

            modelBuilder.Entity("KPCOS.Data.Models.ServiceBooking", b =>
                {
                    b.Navigation("ServiceAssignments");

                    b.Navigation("ServiceExecutions");

                    b.Navigation("ServiceFeedbacks");
                });

            modelBuilder.Entity("KPCOS.Data.Models.User", b =>
                {
                    b.Navigation("Customers");

                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
